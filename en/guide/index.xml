<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>快速入门 on Project X</title><link>https://xtls.github.io/en/guide/</link><description>Recent content in 快速入门 on Project X</description><generator>Hugo -- gohugo.io</generator><language>cn</language><lastBuildDate>Wed, 23 Dec 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://xtls.github.io/en/guide/index.xml" rel="self" type="application/rss+xml"/><item><title>下载安装</title><link>https://xtls.github.io/en/guide/install/</link><pubDate>Wed, 23 Dec 2020 00:00:00 +0000</pubDate><guid>https://xtls.github.io/en/guide/install/</guid><description>平台支持 Xray 在以下平台中可用：
Windows 7 及之后版本（x86 / amd64 / arm32）； macOS 10.10 Yosemite 及之后版本（amd64）； Linux 2.6.23 及之后版本（x86 / amd64 / arm / arm64 / mips64 / mips / ppc64 / s390x / riscv64）； 包括但不限于 Debian 7 / 8、Ubuntu 12.04 / 14.04 及后续版本、CentOS 7 / 8、Arch Linux 等； FreeBSD (x86 / amd64)； OpenBSD (x86 / amd64)； Dragonfly BSD (amd64)；
下载 Xray 预编译的二进制 ZIP 格式压缩包可在 Github Releases 中找到。</description></item><item><title>配置运行</title><link>https://xtls.github.io/en/guide/config/</link><pubDate>Wed, 23 Dec 2020 00:00:00 +0000</pubDate><guid>https://xtls.github.io/en/guide/config/</guid><description>下载并安装 了 Xray 之后，您需要对它进行一下配置。
为了演示，这里只介绍简单的配置方式.
如需配置更复杂的功能，请参考更详细的 配置文件 中相关说明。
服务端配置 你需要一台防火墙外的服务器，来运行服务器端的 Xray。配置如下：
{ &amp;#34;inbounds&amp;#34;: [ { &amp;#34;port&amp;#34;: 10086, // 服务器监听端口 &amp;#34;protocol&amp;#34;: &amp;#34;vmess&amp;#34;, &amp;#34;settings&amp;#34;: { &amp;#34;clients&amp;#34;: [ { &amp;#34;id&amp;#34;: &amp;#34;b831381d-6324-4d53-ad4f-8cda48b30811&amp;#34; } ] } } ], &amp;#34;outbounds&amp;#34;: [ { &amp;#34;protocol&amp;#34;: &amp;#34;freedom&amp;#34; } ] } 服务器的配置中需要确保 id 和端口与客户端一致，就可以正常连接了。
客户端配置 在你的 PC（或手机）中，需要用以下配置运行 Xray ：
{ &amp;#34;inbounds&amp;#34;: [ { &amp;#34;port&amp;#34;: 1080, // SOCKS 代理端口，在浏览器中需配置代理并指向这个端口 &amp;#34;listen&amp;#34;: &amp;#34;127.0.0.1&amp;#34;, &amp;#34;protocol&amp;#34;: &amp;#34;socks&amp;#34;, &amp;#34;settings&amp;#34;: { &amp;#34;udp&amp;#34;: true } } ], &amp;#34;outbounds&amp;#34;: [ { &amp;#34;protocol&amp;#34;: &amp;#34;vmess&amp;#34;, &amp;#34;settings&amp;#34;: { &amp;#34;vnext&amp;#34;: [ { &amp;#34;address&amp;#34;: &amp;#34;server&amp;#34;, // 服务器地址，请修改为你自己的服务器 ip 或域名 &amp;#34;port&amp;#34;: 10086, // 服务器端口 &amp;#34;users&amp;#34;: [ { &amp;#34;id&amp;#34;: &amp;#34;b831381d-6324-4d53-ad4f-8cda48b30811&amp;#34; } ] } ] } }, { &amp;#34;protocol&amp;#34;: &amp;#34;freedom&amp;#34;, &amp;#34;tag&amp;#34;: &amp;#34;direct&amp;#34; } ], &amp;#34;routing&amp;#34;: { &amp;#34;domainStrategy&amp;#34;: &amp;#34;IPOnDemand&amp;#34;, &amp;#34;rules&amp;#34;: [ { &amp;#34;type&amp;#34;: &amp;#34;field&amp;#34;, &amp;#34;ip&amp;#34;: [&amp;#34;geoip:private&amp;#34;], &amp;#34;outboundTag&amp;#34;: &amp;#34;direct&amp;#34; } ] } } 上述配置唯一要更改的地方是你的服务器 IP，配置中已注明。上述配置会把除局域网（比如访问路由器）以外的所有流量转发至你的服务器。</description></item><item><title>命令参数</title><link>https://xtls.github.io/en/guide/command/</link><pubDate>Wed, 23 Dec 2020 00:00:00 +0000</pubDate><guid>https://xtls.github.io/en/guide/command/</guid><description>TIP
Xray 使用 go 风格的命令及参数
获取基本命令 您可以运行 xray help 来获得所有 xray 最基础的用法, 以及可用的命令及说明.
Xray is a platform for building proxies. Usage: xray &amp;lt;command&amp;gt; [arguments] The commands are: run Run Xray with config, the default command version Show current version of Xray api Call an API in an Xray process tls TLS tools uuid Generate new UUIDs Use &amp;#34;xray help &amp;lt;command&amp;gt;&amp;#34; for more information about a command.</description></item><item><title>使用文档</title><link>https://xtls.github.io/en/guide/document/</link><pubDate>Wed, 23 Dec 2020 00:00:00 +0000</pubDate><guid>https://xtls.github.io/en/guide/document/</guid><description>查看文档 您可以使用左侧的菜单选择您要看的相关分类
选择某一项菜单之后, 可以在正文区顶部的导航栏快速切换此分类中的文章.
在查看文章时, 可以通过右边的标题列表, 快速切换到其中一个标题.
改进文档 Project X 的文档托管在github上.
您可以通过以下步骤, 提交您对文档的改动:
从project X 文档仓库打开仓库, 点击右上角的 fork, fork 一份文档仓库的镜像到您自己的 github 仓库.
使用任何您喜欢的工具, 从您克隆的仓库获得文档的克隆, 如:
git clone https://github.com/yours/XTLS.github.io 基于 main 分支创建新的分支, 如: git checkout -b your-branch 在新分支上做修改, 完成后提交修改
推送创建的分支到您的仓库
git push -u origin your-branch 打开 github, 点击 &amp;lsquo;Pull request&amp;rsquo; 向 project X 文档仓库发出PR.</description></item></channel></rss>