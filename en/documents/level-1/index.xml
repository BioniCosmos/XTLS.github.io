<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>入门技巧 on Project X</title><link>https://xtls.github.io/en/documents/level-1/</link><description>Recent content in 入门技巧 on Project X</description><generator>Hugo -- gohugo.io</generator><language>cn</language><lastBuildDate>Wed, 23 Dec 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://xtls.github.io/en/documents/level-1/index.xml" rel="self" type="application/rss+xml"/><item><title>Xray的工作模式</title><link>https://xtls.github.io/en/documents/level-1/work/</link><pubDate>Wed, 23 Dec 2020 00:00:00 +0000</pubDate><guid>https://xtls.github.io/en/documents/level-1/work/</guid><description>单服务器模式 与其它的网络代理工具一样，你需要一台配置了 Xray 的服务器，然后在自己的设备上安装并配置 Xray 客户端，然后即可流畅地访问互联网。
mermaid.initialize({startOnLoad:true}); graph LR; A(PC) -.- B(防火墙); B -.- C(墙外网站); A -- D(Xray/VPS); D -- C; A -- E(墙内网站); 一个 Xray 服务器可同时支持多台设备使用不同的代理协议访问。同时，经过合理的配置，Xray 可以识别并区分需要代理以及不需要代理的流量，直连的流量不需要绕路。
桥接模式 如果你不想在每一台设备上都配置路由，你也可以设置一台中转服务器，用于接收客户端发来的所有流量，然后在服务器中进行转发判断。
mermaid.initialize({startOnLoad:true}); graph LR; A(PC) -.- B(防火墙); B -.- C(墙外网站); A -- D(墙内 VPS); D -- E(墙外 VPS); E -- C; D -- F(墙内网站);
工作原理 在配置 Xray 之前，不妨先来看一下 Xray 的工作原理，以下是单个 Xray 进程的内部结构示意图。多个 Xray 之间相互独立，互不影响。</description></item></channel></rss>